// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyConcierge.Infrastructure;

#nullable disable

namespace MyConcierge.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250224031634_AddContratsLocationTable")]
    partial class AddContratsLocationTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyConcierge.Domain.Models.ContratsLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocataireId")
                        .HasColumnType("int");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UniteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocataireId");

                    b.HasIndex("UniteId");

                    b.ToTable("ContratsLocations", (string)null);
                });

            modelBuilder.Entity("MyConcierge.Domain.Models.ReferenceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReferenceTypes", (string)null);
                });

            modelBuilder.Entity("MyConcierge.Domain.Models.Unite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EstLouee")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ParentUniteId")
                        .HasColumnType("int");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProprietaireId")
                        .HasColumnType("int");

                    b.Property<int>("ReferenceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentUniteId");

                    b.HasIndex("ProprietaireId");

                    b.HasIndex("ReferenceTypeId");

                    b.ToTable("Unites", (string)null);
                });

            modelBuilder.Entity("MyConcierge.Domain.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReferenceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReferenceTypeId");

                    b.ToTable("Utilisateurs", (string)null);
                });

            modelBuilder.Entity("MyConcierge.Domain.Models.ContratsLocation", b =>
                {
                    b.HasOne("MyConcierge.Domain.Models.Utilisateur", "Locataire")
                        .WithMany()
                        .HasForeignKey("LocataireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyConcierge.Domain.Models.Unite", "Unite")
                        .WithMany()
                        .HasForeignKey("UniteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locataire");

                    b.Navigation("Unite");
                });

            modelBuilder.Entity("MyConcierge.Domain.Models.Unite", b =>
                {
                    b.HasOne("MyConcierge.Domain.Models.Unite", "ParentUnite")
                        .WithMany()
                        .HasForeignKey("ParentUniteId");

                    b.HasOne("MyConcierge.Domain.Models.Utilisateur", "Proprietaire")
                        .WithMany()
                        .HasForeignKey("ProprietaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyConcierge.Domain.Models.ReferenceType", "ReferenceType")
                        .WithMany()
                        .HasForeignKey("ReferenceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentUnite");

                    b.Navigation("Proprietaire");

                    b.Navigation("ReferenceType");
                });

            modelBuilder.Entity("MyConcierge.Domain.Models.Utilisateur", b =>
                {
                    b.HasOne("MyConcierge.Domain.Models.ReferenceType", "ReferenceType")
                        .WithMany()
                        .HasForeignKey("ReferenceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReferenceType");
                });
#pragma warning restore 612, 618
        }
    }
}
